[project]
name = "agent-dialogues"
version = "0.1.0-alpha.1"
description = "Agent Dialogues: Multi-Agent Simulation Framework for AI Behavior Research"
authors = [
    { name = "Márk Tákacs", email = "mark.takacs@savalera.com" },
]
readme = "README.md"
license = { text = "MIT" }
requires-python = ">=3.9"
dependencies = [
    "argparse>=1.4.0",
    "langchain-ollama>=0.2.3",
    "langgraph>=0.2.6",
    "python-dotenv>=1.0.1",
    "rich>=13.9.4",
]

[dependency-groups]
dev = [
    "langgraph-cli>=0.1.73",
    "pytest>=8.3.5",
    "pytest-cov>=6.0.0",
]

[project.optional-dependencies]
dev = ["mypy>=1.11.1", "ruff>=0.6.1"]

[tool.pytest.ini_options]
pythonpath = ["src"]

[build-system]
requires = ["setuptools>=73.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
packages = ["langgraph.templates.agent", "agent"]
[tool.setuptools.package-dir]
"langgraph.templates.agent" = "src/agents"
"agent" = "src/agents"

[tool.setuptools.package-data]
"*" = ["py.typed"]

[tool.ruff]
lint.select = [
    "E",    # pycodestyle
    "F",    # pyflakes
    "I",    # isort
    "D",    # pydocstyle
    "D401", # First line should be in imperative mood
    "T201",
    "UP",
]
lint.ignore = [
    "UP006",
    "UP007",
    # We actually do want to import from typing_extensions
    "UP035",
    # Relax the convention by _not_ requiring documentation for every function parameter.
    "D417",
    "E501",
]
[tool.ruff.lint.per-file-ignores]
"tests/*" = ["D", "UP"]
[tool.ruff.lint.pydocstyle]
convention = "google"
